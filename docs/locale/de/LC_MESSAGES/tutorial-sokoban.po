# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Radomir Dopieralski
# This file is distributed under the same license as the PewPew package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Carlo Del Rossi <carlo.del.rossi@hsr.ch>, 2019
# Johannes Wildermuth <johannes.wildermuth@hsr.ch>, 2019
# Raphael Das Gupta <github.com@raphael.dasgupta.ch>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PewPew 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-10 12:05+0100\n"
"PO-Revision-Date: 2019-12-03 13:18+0000\n"
"Last-Translator: Raphael Das Gupta <github.com@raphael.dasgupta.ch>, 2020\n"
"Language-Team: German (https://www.transifex.com/pew-pew/teams/105124/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../tutorial-sokoban.rst:2
msgid "Sokoban Tutorial"
msgstr "Sokoban-Tutorial"

#: ../../tutorial-sokoban.rst:4
msgid ""
"When looking for simple games to implement on PewPew, it helps to look back "
"to the times when computers were so young and underpowered, compared to "
"today, that simple games were all they could run. One of those games is "
"Sokoban. Let’s try to write a Sokoban for PewPew!"
msgstr ""
"Bei der Suche nach simplen Games, die man in PewPew implementieren könnte, "
"hilft es, auf die Zeit zurückzublicken, wo die Computer im Vergleich zu "
"heute noch jung und leistungsschwach waren, so dass simple Games die "
"einzigen waren, die sie laufen lassen konnten. Zu diesen Spielen gehört "
"Sokoban. Versuchen wir's doch mit Sokoban für PewPew!"

#: ../../tutorial-sokoban.rst:9
msgid ""
"`Sokoban <https://en.wikipedia.org/wiki/Sokoban>`_ is a puzzle game where "
"you play a warehouse worker who has to push packing crates around until they"
" are where they are supposed to be, which is indicated by marks on the "
"floor. Unfortunately, your warehouse is a bit labyrinthine, and you can only"
" push the crates, not pull them, so you need to plan carefully: if you push "
"a crate into a corner, you can never get it back out."
msgstr ""
"Bei `Sokoban <https://de.wikipedia.org/wiki/Sokoban>`_ handelt es sich um "
"ein Knobel-Spiel, in dem du einen Lagerarbeiter spielst, der "
"Verpackungskisten solange herumschieben muss, bis sie an den richtigen "
"Stellen sind, welche durch die Markierungen am Boden erkennbar sind. "
"Unglücklicherweise scheint das Lagerhaus eine Art Labyrinth zu sein, dazu "
"noch ist es dem Arbeiter nur möglich, die Kisten zu schieben und nicht zu "
"ziehen, also musst du vorsichtig vorausplanen: Falls du eine Kiste in eine "
"Ecke schiebst, kriegst du sie nicht mehr von dort weg."

#: ../../tutorial-sokoban.rst:16
msgid ""
"As in the :doc:`tutorial`, create a file named *code.py* containing the "
"basic setup and game loop. Instead of a blank screen, we put the game board "
"on the screen right away: some walls, indicated by color 1 (dim or green), "
"surrounding free space of color 0 (black). ::"
msgstr ""
"Erstelle wie im :doc:`tutorial` eine Datei mit dem Namen *code.py*, das den "
"Aufbau und die Endlosschleife beinhaltet. Anstelle eines leeren "
"Hintergrundes erstellen wir das Spielfeld schon zu Beginn: Ein paar Wände, "
"denen wir die Farbe 1 geben (trüb/grün), die die frei zugänglichen Felder "
"mit der Farbe 0 (schwarz) begrenzen. ::"

#: ../../tutorial-sokoban.rst:41
msgid ""
"Let’s add a player character, indicated by a bright pixel, that can be moved"
" around with the directional keys. We erase the pixel in the old position at"
" the beginning of the loop by replacing it with 0 (black floor), then move "
"the position if any keys are pressed, and finally paint it at the new "
"position:"
msgstr ""
"Fügen wir die Spielfigur hinzu, dargestellt mit einem hellen Pixel, das mit "
"den Richtungstasten bewegt werden kann. Wir löschen das Pixel an der alten "
"Position am Anfang der Endlosschleife, indem die Farbe zu 0 (schwarzer "
"Boden) geändert wird. Dann, falls eine Taste gedrückt wurde, wird die "
"Position verändert und schließlich das Pixel an der neuen Position "
"gezeichnet:"

#: ../../tutorial-sokoban.rst:71
msgid ""
"Note that we use ``elif`` (Python’s shorthand for “else, if”) to check for "
"different keys, which means that we can only move in one of the four "
"directions at once. If we used ``if`` for every key, we could move e.g. "
"right and down at the same time, that is, move diagonally. (We could also "
"move up and down at the same time, which means not moving at all.) For "
"Sokoban, we don’t want to be able to move diagonally, only horizontally and "
"vertically, so we use ``elif``."
msgstr ""
"Beachte, dass wir ``elif`` benützen (Python's Schreibweise für \"else, "
"if\"), um die Steuertasten zu überprüfen, was bedeutet, dass wir uns nur in "
"eine von vier Richtungen aufs Mal bewegen können. Würden wir ``if`` für jede"
" Taste benützen, könnten wir z. B. gleichzeitig uns nach rechts und nach "
"unten bewegen, was ein diagonaler Schritt wäre. (Auch könnte man sich "
"gleichzeitig nach oben und unten bewegen, was mit Stehenbleiben "
"gleichzusetzen wäre.) In Sokoban sollte es nicht möglich sein, sich diagonal"
" zu bewegen, deswegen verwenden wir ``elif``."

#: ../../tutorial-sokoban.rst:78
msgid ""
"If you try this, you will notice that the player can move through walls and "
"outside of the screen, leaving holes in the walls. Let’s fix that."
msgstr ""
"Wenn du dies ausführst, wirst du sehen, dass der Spieler durch die Wände "
"gehen und außerhalb des Bildschirms sein kann, und dabei Löcher in der Wand "
"hinterlässt. Lass uns das nun beheben."

#: ../../tutorial-sokoban.rst:81
msgid ""
"Instead of moving right away when a key is pressed, we first record in what "
"direction we want to move in the variables ``dx`` and ``dy`` (the ``d`` "
"stands for “delta” or “difference”, because this is going to be the "
"difference between the new and old position). Then we look ahead what is in "
"that direction, the ``target`` pixel, and only move when it is “floor” (0)."
msgstr ""
"Anstatt dass sich die Spielfigur sofort bewegt, wenn eine Taste gedrückt "
"wird, sollten wir die Bewegung zuerst in die Variablen ``dx`` und ``dy`` "
"speichern. (Das ``d`` steht für \"Delta\" oder \"Differenz\", weil die "
"Variablen die Differenz zwischen der neuen und alten Position "
"repräsentieren). Dann schauen wir uns zuerst an, was sich bei der neuen "
"Position befindet, und bewegen uns nur dann, wenn das Feld ein \"Boden\" (0)"
" ist."

#: ../../tutorial-sokoban.rst:112
msgid ""
"Now that that works as it should, let’s add the next element, a crate, "
"represented by a bright pixel (3):"
msgstr ""
"Jetzt, da dies so funktioniert wie es sollte, fahren wir doch fort mit dem "
"nächsten Element, nämlich eine Kiste, repräsentiert durch ein helles Pixel "
"(3):"

#: ../../tutorial-sokoban.rst:129
msgid ""
"When a crate is in front of a player wanting to move, it will be pushed away"
" one pixel further in the same direction, and the player can move:"
msgstr ""
"Falls sich eine Kiste vor der Spielfigur, die sich in deren Richtung bewegen"
" will, befindet, wird die Kiste ein Feld nach vorne geschoben, und der "
"Spieler kann sich bewegen:"

#: ../../tutorial-sokoban.rst:147
msgid ""
"There is no need to erase the crate at its old position, because it will "
"immediately be overwritten with the player anyway."
msgstr ""
"Die Kiste braucht nicht an ihrer alten Position gelöscht zu werden, da sie "
"sowieso sofort durch den Spieler überschrieben wird."

#: ../../tutorial-sokoban.rst:150
msgid ""
"Test it and you will notice that you can push the crate through walls, "
"punching holes in the walls again. We obviously need to check what’s "
"*behind* the crate first, before we decide to move it."
msgstr ""
"Teste es aus und du wirst merken, dass du Kisten durch Wände schieben kannst"
" und somit wieder Löcher kreierst. Offensichtlich müssen wir zuerst "
"überprüfen, was sich *hinter* der Kiste befindet, bevor wir uns entscheiden,"
" sie zu bewegen."

#: ../../tutorial-sokoban.rst:169
msgid ""
"That works, but we now have two bright pixels on the screen, the player and "
"the crate, and when the player isn’t moving, you can’t tell which is which. "
"We still have an unused color available that we could use for one of them, 2"
" (medium brightness or red), but we’d like to use that for the marks on the "
"floor later. Instead, let’s make the player blink. That needs another "
"variable to keep track of what the last state was, which is then reversed "
"after every time the player is drawn. A natural choice for such a variable "
"with two states is a boolean with its two values ``True`` and ``False``."
msgstr ""
"Das funktioniert, jedoch haben wir jetzt zwei helle Pixel auf dem "
"Bildschirm, die Spielfigur und die Kiste, und falls sich die Figur nicht "
"bewegt, sind sie kaum unterscheidbar. Wir haben immer noch eine ungenutzte "
"Farbe zur Verfügung, die wir für eine der beiden benutzen könnten, 2 "
"(mittlere Helligkeit oder rot), diese Farbe werden wir aber später für die "
"Markierung auf den Böden verwenden. Stattdessen lassen wir den Spieler "
"blinken. Dafür brauchen wir eine weitere Variable, die sich merkt, was der "
"letzte Zustand war, und diese wird jedesmal \"umgeschaltet\", wenn die "
"Spielfigur gezeichnet wird. Die beste Wahl für eine solche Variable mit zwei"
" Zuständen wäre ein Boolean, dessen zwei Werte ``True`` und ``False`` sind."

#: ../../tutorial-sokoban.rst:199
msgid ""
"Time for the last missing element: the marks on the floor. We represent them"
" by color 2:"
msgstr ""
"Nun zum letzten noch fehlenden Element: Die Markierungen am Boden. Wir geben"
" ihnen die Farbe 2:"

#: ../../tutorial-sokoban.rst:216
msgid ""
"And the player and crates can move over them just like over bare floor:"
msgstr ""
"Und die Spielfigur und Kisten können sich darauf frei bewegen wie bei den "
"normalen Böden:"

#: ../../tutorial-sokoban.rst:232
msgid ""
"Try it out, and you will find the next problem: the mark is erased by either"
" player or crate moving over it. This is because when overwriting the "
"respective pixel with 2 or 3 to draw the player, we lose the information "
"whether there was a mark there, and in the first line of the next loop, we "
"will restore bare floor (0) even when there should have been a mark (2). We "
"somehow need to preserve this information."
msgstr ""
"Teste es aus und du wirst ein weiteres Problem finden: Die Markierung wird "
"entweder durch die Spielfigur oder einer Kiste, die drüber geht, gelöscht. "
"Das liegt daran, dass die Markierung von einem Pixel einer anderen Farbe "
"überschrieben wird und deswegen die Information, ob eine Markierung da war "
"oder nicht, verloren geht. Dadurch wird zu Beginn des nächsten Durchgangs "
"der Schlaufe das Feld zu einem normalen Boden (0) , auch wenn dort eine "
"Markierung (2) sein sollte. Wir müssen irgendwie dafür sorgen, dass diese "
"Information erhalten bleibt."

#: ../../tutorial-sokoban.rst:239
msgid ""
"To solve this, there is a trick we can use. So far, we have always used "
"pixel values 0–3 for black, dim, medium, bright or black, green, red, "
"orange. These are all the colors that our hardware can display. But what "
"happens if we use higher numbers? If you try it, you will find that 4 "
"produces black, 5 produces dim/green again, 6 medium/red, 7 bright/orange, 8"
" black, and so on – the pattern just repeats every four steps. In other "
"words, you can add 4 to a pixel value without changing its apparent color."
msgstr ""
"Um dies zu lösen, gibt es folgenden Trick, den wir benutzen können. Bis "
"jetzt haben wir immer für die Pixel die Werte 0–3 für schwarz, trüb, mittel,"
" hell oder schwarz, grün, rot, orange verwendet. Dies sind all die Farben, "
"die unsere Hardware anzeigen kann. Aber was passiert, wenn wir höhere Zahlen"
" verwenden? Wenn du da was ausprobierst, wirst du bemerken, dass 4 schwarz "
"ist, 5 wieder trüb/grün, 6 mittel/rot, 7 hell/orange, 8 schwarz usw. – das "
"Muster wiederholt sich alle 4 Stufen. In anderen Worten, du kannst 4 einem "
"Pixel hinzufügen, ohne dessen Farbe zu ändern."

#: ../../tutorial-sokoban.rst:247
msgid ""
"We can use this to our advantage: If we represent a crate-on-bare-floor as 3"
" and a crate-on-mark as 7, they will both look the same, but we can still "
"distinguish them in the code. The same goes for the player: if the pixel "
"blinks between 2 and 3, it’s on bare floor, if it blinks between 6 and 7, "
"it’s on a mark."
msgstr ""
"Wir können dies zu unserem Vorteil nutzen: Wenn wir den Kisten auf normalen "
"Böden die Zahl 3 und den Kisten auf Markierungen die 7 zuweisen, werden sie "
"gleich aussehen, aber dennoch in unserem Code unterscheidbar sein. Dasselbe "
"gilt für die Spielfigur: Blinkt sie in den Farben 2 und 3, ist sie auf "
"normalem Boden, sind es die Farben 6 und 7, ist sie auf einer Markierung."

#: ../../tutorial-sokoban.rst:252
msgid ""
"For the player, this needs to be applied on the line where we erase the "
"player and restore the floor (with or without mark), and on the line where "
"we draw the new player over the previous floor or crate (each with or "
"without mark):"
msgstr ""
"Für die Spielfigur schreiben wir diesen Code bei der Zeile, wo wir die "
"Spielfigur entfernen und den Boden wiederherstellen (mit oder ohne "
"Markierung), und bei der Zeile, wo wir die Figur über des vorherigen Bodens "
"oder Kiste neu zeichnen (auch hier mit oder ohne Markierung):"

#: ../../tutorial-sokoban.rst:274
msgid ""
"For the crate, it needs to be applied on the line where we detect a crate in"
" front of the player and on the line where we draw the new crate over the "
"previous floor:"
msgstr ""
"Für die Kiste implementieren wir den Code bei der Zeile, wo wir eine Kiste "
"vor der Spielfigur erkennen und dort, wo die Kiste über den vorherigen Boden"
" gezeichnet wird:"

#: ../../tutorial-sokoban.rst:291
msgid ""
"Test this and check that you can now both walk over the mark and push the "
"crate over the mark without erasing it. Congratulations – with this, our "
"game mechanics are now complete! The game still does not detect when all "
"crates are placed on their marks and therefore the level is solved, though. "
"Let’s add that."
msgstr ""
"Teste es aus und versuche einmal, über eine Markierung zu gehen und eine "
"Kiste darüber zu schieben, ohne die Markierung dabei permanent zu löschen. "
"Gute Arbeit – somit sollte unsere Spielmechanik vollständig sein. Das Spiel "
"ist jedoch noch nicht dazu in der Lage, das Level als abgeschlossen zu "
"sehen, wenn sich alle Kisten auf Markierungen befinden. Lass uns das noch "
"hinzufügen."

#: ../../tutorial-sokoban.rst:296
msgid ""
"The easiest way of checking that is to count all bare marks: if none of them"
" are left, the puzzle is solved. So, iterate over all pixels (with an outer "
"loop over all rows and an inner loop over the pixels of each row) and count "
"up every time you see a bare mark. If the count remains 0, break out of the "
"top-level ``while True`` loop, at which point the program ends because "
"there’s no more code after the loop. It’s important to do this before we "
"draw the player, who might stand on a mark and thereby hide it from the "
"counting otherwise."
msgstr ""
"Am einfachsten lässt sich das prüfen, indem wir alle noch leeren "
"Markierungen zählen: Sind keine mehr übrig, ist das Puzzle gelöst. Iteriere "
"über alle Pixel (mit einer äußeren Schleife über alle Reihen und einer "
"inneren Schleife über alle Pixel einer Reihe) und zähle jedes Mal, wenn du "
"eine Markierung findest, eins dazu. Bleibt der Zähler bei 0, bricht die Top-"
"Level Endlosschleife ab, was dazu führt, dass das Programm beendet, da es "
"nach der Schleife keine Code-Zeilen mehr gibt. Es ist wichtig, dass wir die "
"Überprüfung vor dem Zeichnen der Spielfigur machen, da sie sonst auf einer "
"Markierung stehen könnte und sie somit versteckt wäre und nicht gezählt "
"wird."

#: ../../tutorial-sokoban.rst:324
msgid ""
"You can test this, but testing it with only one crate is not a very general "
"test, so add another one, and a mark for it."
msgstr ""
"Du kannst dies jetzt austesten, aber da eine einzige Kiste nicht genügt, "
"fügen wir eine zweite und eine dazugehörige Markierung hinzu."

#: ../../tutorial-sokoban.rst:341
msgid ""
"After you verify that the completion detection works properly – the game "
"exits when both crates are on their marks, no earlier and no later – it’s "
"now up to you to make the game more interesting by adding more walls to the "
"level. Or maybe you want to extend the game to support multiple levels of "
"increasing difficulty? Or add a nice reward animation for a completed level?"
" Have fun!"
msgstr ""
"Nachdem du überprüft hast, ob das Programm zum richtigen Zeitpunkt das "
"Puzzle als gelöst sieht – also ob das Game beendet wird, wenn sich beide "
"Kisten auf Markierungen befinden und nicht vorher oder erst später – ist es "
"jetzt dir überlassen, das Spiel interessanter zu gestalten, indem mehr Wände"
" hinzufügst. Oder vielleicht willst du das Game erweitern, indem du mehrere "
"Levels mit kontinuierlich wachsendem Schwierigkeitsgrad hinzufügst? Oder "
"indem du eine belohnende Animation für ein geschafftes Level hinzufügst? "
"Viel Spaß dabei!"

#: ../../tutorial-sokoban.rst:347
msgid "Here is the complete code in its final state again::"
msgstr "Hier, den kompletten Code in seinem letzten Zustand::"

#: ../../tutorial-sokoban.rst:401
msgid "You can also find this at https://github.com/pewpew-game/game-sokoban."
msgstr ""
"Du kannst den Code auch hier finden: https://github.com/pewpew-game/game-"
"sokoban"
